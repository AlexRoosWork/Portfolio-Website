<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>telegram on Alex Roos</title>
    <link>/tags/telegram/</link>
    <description>Recent content in telegram on Alex Roos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Mar 2021 00:00:00 +0100</lastBuildDate><atom:link href="/tags/telegram/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BeInCrypto Educational Telegram Bot</title>
      <link>/projects/beincrypto/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>/projects/beincrypto/</guid>
      <description>Check the code out on GitHub!
 Using programming skills for real world value In the summer of 2020 I was working as an editor in chief for the German section of BeInCrypto. While the work as a journalist and editor was certainly interesting and rewarding, by that time the passion to code had me already. So I wanted to program something that would be useful to the business.</description>
    </item>
    
    <item>
      <title>MoneroBlocksBot</title>
      <link>/projects/moneroblocksbot/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>/projects/moneroblocksbot/</guid>
      <description>Check the code out on GitHub!
 Playing with APIs The purpose of this bot was for me to practice using public APIs. Allthewhile I also wanted to provide some value to Monero ethusiasts on Telegram.
For this I used API provided by MoneroBlocks.info (nowadays LocalMonero.co). With the right parameters in the URL you get a json object with the appropriate information (i.e. Block Height, TXs in the last Block etc.</description>
    </item>
    
    <item>
      <title>ReputationBot</title>
      <link>/projects/reputationbot/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>/projects/reputationbot/</guid>
      <description>Check the code out on GitHub!
 My first real telegram bot Since I was an admin in a particular Telegram group, I wanted to use my programming knowledge to expand the utility of my group. Soon after, the idea for a Reddit-style voting bot for messages was born.
Basically, users have voting power that gets reset every 24 hours. Up- or downvoting consumes voting power. Users collect repuation over time and can &amp;ldquo;win the week&amp;rdquo;, meaning that they are the user with the most upvotes in a given week.</description>
    </item>
    
  </channel>
</rss>
